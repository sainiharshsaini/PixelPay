name: CI/CD Pipeline

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8 # or your desired pnpm version
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Cache Turborepo
        uses: actions/cache@v4
        with:
          path: .turbo
          key: turbo-${{ runner.os }}-${{ github.ref_name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            turbo-${{ runner.os }}-${{ github.ref_name }}-

      - name: Build all packages
        run: pnpm turbo run build

      - name: Run tests
        run: pnpm turbo run test

      - name: TypeScript type check
        run: pnpm turbo run typecheck

      - name: Upload production build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: production-build
          path: |
            apps/user-app/.next
            # Add other app build directories if needed
            # e.g., apps/merchant-app/dist

  # Optional: Add deployment job below if needed
  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build-and-test
  #   steps:
  #     - name: Download build artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: production-build
  #     - name: Deploy to production
  #       run: echo "Add your deployment script here"
