name: CI/CD Pipeline

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'pnpm'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_ENV

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: pnpm-store-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-store-${{ runner.os }}-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Cache Turborepo
        uses: actions/cache@v4
        with:
          path: .turbo
          key: turbo-${{ runner.os }}-${{ github.sha }}
          restore-keys: |
            turbo-${{ runner.os }}-

      - name: Build all packages
        run: pnpm turbo run build --filter=...

      - name: Run tests
        run: pnpm turbo run test --filter=...

      - name: TypeScript type check
        run: pnpm turbo run typecheck --filter=...

      # Optionally, upload build artifacts for deployment
      # - name: Upload production build
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: production-build
      #     path: ./apps/**/dist

  # Optional: Add deployment job below if needed
  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build-and-test
  #   steps:
  #     - name: Download build artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: production-build
  #     - name: Deploy to production
  #       run: echo "Add your deployment script here"
